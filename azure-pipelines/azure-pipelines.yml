# Azure DevOps Pipeline for Playwright Tests
# Pipeline for running end-to-end tests on Azure Blue application

trigger:
  branches:
    include:
      - main
      - develop
      - feature/*
  paths:
    exclude:
      - README.md
      - docs/*

pr:
  branches:
    include:
      - main
      - develop

schedules:
- cron: "0 6 * * *"  # Run daily at 6 AM UTC
  displayName: Daily scheduled test run
  branches:
    include:
    - main
  always: true

variables:
  nodeVersion: '18.x'
  playwrightVersion: 'latest'

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Test
  displayName: 'Run Playwright Tests'
  jobs:
  - job: PlaywrightTests
    displayName: 'Playwright E2E Tests'
    timeoutInMinutes: 30
    
    strategy:
      matrix:
        chromium:
          browserName: 'chromium'
        firefox:
          browserName: 'firefox'
        webkit:
          browserName: 'webkit'
    
    steps:
    - task: NodeTool@0
      displayName: 'Install Node.js'
      inputs:
        versionSpec: $(nodeVersion)
    
    # Cache node modules for faster builds
    - task: Cache@2
      displayName: 'Cache node modules'
      inputs:
        key: 'npm | "$(Agent.OS)" | package-lock.json'
        restoreKeys: |
          npm | "$(Agent.OS)"
        path: ~/.npm
    
    # Install dependencies
    - script: |
        npm ci
      displayName: 'Install dependencies'
    
    # Install Playwright browsers
    - script: |
        npx playwright install --with-deps $(browserName)
      displayName: 'Install Playwright browsers'
    
    # Run tests
    - script: |
        npx playwright test --project=$(browserName) --reporter=html,junit
      displayName: 'Run Playwright tests'
      env:
        LOGIN_USERNAME: $(LOGIN_USERNAME) # Set in pipeline variables
        LOGIN_PASSWORD: $(LOGIN_PASSWORD) # Set in pipeline variables
        BASE_URL: $(BASE_URL)
    
    # Publish test results
    - task: PublishTestResults@2
      displayName: 'Publish test results'
      condition: always()
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: 'test-results/junit-report.xml'
        testRunTitle: 'Playwright Tests - $(browserName)'
    
    # Publish HTML report
    - task: PublishHtmlReport@1
      displayName: 'Publish HTML Report'
      condition: always()
      inputs:
        reportDir: 'playwright-report'
        tabName: 'Playwright Report - $(browserName)'
    
    # Publish screenshots and videos as artifacts
    - task: PublishBuildArtifacts@1
      displayName: 'Publish test artifacts'
      condition: always()
      inputs:
        pathToPublish: 'test-results'
        artifactName: 'playwright-artifacts-$(browserName)'
    
    # Publish trace files for debugging
    - task: PublishBuildArtifacts@1
      displayName: 'Publish trace files'
      condition: failed()
      inputs:
        pathToPublish: 'test-results/traces'
        artifactName: 'playwright-traces-$(browserName)'

- stage: ReportResults
  displayName: 'Report Test Results'
  dependsOn: Test
  condition: always()
  jobs:
  - job: SendNotification
    displayName: 'Send Test Results Notification'
    steps:
    - script: |
        echo "Test execution completed"
        echo "Check the published reports and artifacts for detailed results"
      displayName: 'Test Summary'
